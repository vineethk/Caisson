prog lease(timer,data1,data2,out1,out2) = 
    input[7:0] timer:L;
    input data1:H, data2:L;
    output[7:0] out1:H, out2:L;
    reg mode:L;
    reg[7:0] temp1:H, temp2:L;
    reg[7:0] local_timer:L;
in
let state master:L() = {
    if timer>0 then {
	    local_timer := timer;
    	out1 := 0;
    	out2 := 0;
    	if mode==0 then {
       		mode := 1;
       		temp1 := 0;
       		goto group(data1,temp1,out1);
    	} else {
      		mode := 0;
       		temp2 := 0;
       		goto group(data2,temp2,out2);
   	}
    }
    else {
	    goto master();
    }
}
    state group:L(data:A,temp:A,out:A)[L<A] = {
      let state S1:A() = {
        if data == 0 then { goto S2(); } 
      	else { temp := temp + 1; goto S1(); }
      }
          state S2:A() = {
            if data == 0 then { goto S1(); } 
            else { temp := temp + 2; goto S2(); }
       }
    in
    	  out := temp;
        if local_timer == 0 then { goto master(); } 
      	else { local_timer := local_timer - 1; fall; }
}
in fall;
